plugins {
	id 'fabric-loom' version '1.0-SNAPSHOT'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

loom {
	accessWidenerPath = file("src/main/resources/atlas_combat.accesswidener")
}

repositories {
	flatDir {
		dirs 'libs'
	}
	allprojects { repositories { maven { url 'https://jitpack.io' } } }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/" }

	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}

	maven {
		name = "auoeke Maven"
		url = uri("https://maven.auoeke.net")
	}

	maven {
		name = "ENDERZOMBI102 Maven"
		url = uri("https://repsy.io/mvn/enderzombi102/mc")
	}
	maven { url 'https://maven.wispforest.io' }
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// QSL is not a complete API; You will need Quilted Fabric API to fill in the gaps.
	// Quilted Fabric API will automatically pull in the correct QSL version.
	modApi ("me.shedaniel.cloth:cloth-config-fabric:9.0.94") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modImplementation("com.github.Chocohead:Fabric-ASM:v${rootProject.fabric_asm_version}") {
		exclude group: 'net.fabricmc'
		exclude group: "net.fabricmc.fabric-api"
	}
	include("com.github.Chocohead:Fabric-ASM:v${rootProject.fabric_asm_version}") {
		exclude group: 'net.fabricmc'
		exclude group: "net.fabricmc.fabric-api"
	}
	/*include 'com.github.rizecookey:CookeyMod:1.7.1+1.19.3'
	modImplementation 'com.github.rizecookey:CookeyMod:1.7.1+1.19.3'*/
	include('com.github.rizecookey:CookeyMod:1.7.1+1.19.3')
	modImplementation('com.github.rizecookey:CookeyMod:1.7.1+1.19.3')
	include "maven.modrinth:midnightlib:${project.midnightlib_version}"
	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
	modApi "com.terraformersmc:modmenu:5.0.2"
	include "com.terraformersmc:modmenu:5.0.2"
	implementation("com.github.LlamaLad7:MixinExtras:0.1.1")
	annotationProcessor("com.github.LlamaLad7:MixinExtras:0.1.1")
	include("com.github.LlamaLad7:MixinExtras:0.1.1")
	modImplementation "io.wispforest:owo-lib:${project.owo_version}"
	// only if you plan to use owo-config
	annotationProcessor "io.wispforest:owo-lib:${project.owo_version}"

	// include this if you don't want force your users to install owo
	// sentinel will warn them and give the option to download it automatically
	include "io.wispforest:owo-sentinel:${project.owo_version}"
}

loom {
	accessWidenerPath = file("src/main/resources/atlas_combat.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with developement.
	// Uncomment this line to generate them.
	// withJavadocJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
